


<Advanced Web Attacks and Exploitation>


Table of Contents
	1 Introduction
	1.1 About the AWAE Course
	1.1.2 OSWE Exam Attempt
	1.2 Our Approach
	1.3 Obtaining Support
	1.4 Offensive Security AWAE Labs
	1.4.1 General Information
	1.4.2 Lab Restrictions
	1.4.3 Forewarning and Lab Behavior
	1.4.4 Control Panel
	1.5 Reporting
	1.6 Backups
	1.7 About the OSWE Exam
	1.8 Wrapping Up

2 Tools & Methodologies
	2.1 Web Traffic Inspection
	2.1.1 Burp Suite Proxy
	2.1.2 Using Burp Suite with Other Browsers
	2.1.3 Burp Suite Scope
	2.1.4 Burp Suite Repeater and Comparer
	2.1.5 Burp Suite Decoder
	2.2 Interacting with Web Listeners using Python
	2.3 Source Code Recovery
	2.3.1 Managed .NET Code
	2.3.2 Decompiling Java Classes
	2.4 Source Code Analysis Methodology
	2.4.1 An Approach to Analysis
	2.4.2 Using an IDE
	2.4.3 Common HTTP Routing Patterns
	2.4.4 Analyzing Source Code for Vulnerabilities
	2.5 Debugging
	2.5.1 Remote Debugging
	2.6 Wrapping Up

3 ATutor Authentication Bypass and RCE
	3.1 Getting Started
	3.1.1 Setting Up the Environment
	3.2 Initial Vulnerability Discovery
	3.3 A Brief Review of Blind SQL Injections
	3.4 Digging Deeper
	3.4.1 When $addslashes Are Not
	3.4.2 Improper Use of Parameterization
	3.5 Data Exfiltration
	3.5.1 Comparing HTML Responses
	3.5.2 MySQL Version Extraction
	3.6 Subverting the ATutor Authentication
	3.7 Authentication Gone Bad
	3.8 Bypassing File Upload Restrictions
	3.9 Gaining Remote Code Execution
	3.9.1 Escaping the Jail
	3.9.2 Disclosing the Web Root
	3.9.3 Finding Writable Directories
	3.9.4 Bypassing File Extension Filter
	3.10 Wrapping Up

4 ATutor LMS Type Juggling Vulnerability
	4.1 Getting Started
	4.2 PHP Loose and Strict Comparisons
	4.3 PHP String Conversion to Numbers
	4.4 Vulnerability Discovery
	4.5 Attacking the Loose Comparison
	4.5.1 Magic Hashes
	4.5.2 ATutor and the Magic E-Mail address
	4.6 Wrapping Up

5 ManageEngine Applications Manager AMUserResourcesSyncServlet SQL Injection RCE
	5.1 Getting Started
	5.2 Vulnerability Discovery
	5.2.2 Servlet Mappings
	5.2.3 Source Code Recovery
	5.2.4 Analyzing the Source Code
	5.2.5 Enabling Database Logging
	5.2.6 Triggering the Vulnerability
	5.3 How Houdini Escapes
	5.3.2 Using CHR and String Concatenation
	5.3.3 It Makes Lexical Sense
	5.4 Blind Bats
	5.5 Accessing the File System
	5.5.2 Reverse Shell Via Copy To
	5.6 PostgreSQL Extensions
	5.6.1 Build Environment
	5.6.2 Testing the Extension
	5.6.3 Loading the Extension from a Remote Location
	5.7 UDF Reverse Shell
	5.8 More Shells!!!
	5.8.1 PostgreSQL Large Objects
	5.8.2 Large Object Reverse Shell
	5.9 Summary

6 Bassmaster NodeJS Arbitrary JavaScript Injection Vulnerability
	6.1 Getting Started
	6.2 The Bassmaster Plugin
	6.3 Vulnerability Discovery
	6.4 Triggering the Vulnerability
	6.5 Obtaining a Reverse Shell
	6.6 Wrapping Up

7 DotNetNuke Cookie Deserialization RCE
	7.1 Serialization Basics
	7.1.1 XmlSerializer Limitations
	7.1.2 Basic XmlSerializer Example
	7.1.3 Expanded XmlSerializer Example
	7.1.4 Watch your Type, Dude
	7.2 DotNetNuke Vulnerability Analysis
	7.2.1 Vulnerability Overview
	7.2.2 Manipulation of Assembly Attributes for Debugging
	7.2.3 Debugging DotNetNuke Using dnSpy
	7.2.4 How Did We Get Here?
	7.3 Payload Options
	7.3.1 FileSystemUtils PullFile Method
	7.3.2 ObjectDataProvider Class
	7.3.3 Example Use of the ObjectDataProvider Instance
	7.3.4 Serialization of the ObjectDataProvider
	7.3.5 Enter The Dragon (ExpandedWrapper Class)
	7.4 Putting It All Together
	7.5 Wrapping Up

8 ERPNext Authentication Bypass and Server Side Template Injection
	8.1 Getting Started
	8.1.1 Configuring the SMTP Server
	8.1.2 Configuring Remote Debugging
	8.1.3 Configuring MariaDB Query Logging
	8.2 Introduction to MVC, Metadata-Driven Architecture, and HTTP Routing
	8.2.1 Model-View-Controller Introduction
	8.2.2 Metadata-driven Design Patterns
	8.2.3 HTTP Routing in Frappe
	8.3 Authentication Bypass Discovery
	8.3.1 Discovering the SQL Injection
	8.4 Authentication Bypass Exploitation
	8.4.1 Obtaining Admin User Information
	8.4.2 Resetting the Admin Password
	8.5 SSTI Vulnerability Discovery
	8.5.1 Introduction to Templating Engines
	8.5.2 Discovering The Rendering Function
	8.5.3 SSTI Vulnerability Filter Evasion
	8.6 SSTI Vulnerability Exploitation
	8.6.1 Finding a Method for Remote Command Execution
	8.6.2 Gaining Remote Command Execution
	8.7 Wrapping Up

9 openCRX Authentication Bypass and Remote Code Execution
	9.1 Getting Started
	9.2 Password Reset Vulnerability Discovery
	9.2.1 When Random Isn’t
	9.2.2 Account Determination
	9.2.3 Timing the Reset Request
	9.2.4 Generate Token List
	9.2.5 Automating Resets
	9.3 XML External Entity Vulnerability Discovery
	9.3.2 Introduction to XML
	9.3.3 XML Parsing
	9.3.4 XML Entities
	9.3.5 Understanding XML External Entity Processing Vulnerabilities
	9.3.6 Finding the Attack Vector
	9.3.7 CDATA
	9.3.8 Updating the XXE Exploit
	9.3.9 Gaining Remote Access to HSQLDB
	9.3.10 Java Language Routines
	9.4 Remote Code Execution
	9.4.2 Finding the Write Location
	9.4.3 Writing Web Shells
	9.5 Wrapping Up

10 openITCOCKPIT XSS and OS Command Injection - Blackbox
	10.1 Getting Started
	10.2 Black Box Testing in openITCOCKPIT
	10.3 Application Discovery
	10.3.1 Building a Sitemap
	10.3.2 Targeted Discovery
	10.4 Intro To DOM-based XSS
	10.5 XSS Hunting
	10.6 Advanced XSS Exploitation
	10.6.1 What We Can and Can’t Do
	10.6.2 Writing to DOM
	10.6.3 Creating the Database
	10.6.4 Creating the API
	10.6.5 Scraping Content
	10.6.6 Dumping the Contents
	10.7 RCE Hunting
	10.7.1 Discovery
	10.7.2 Reading and Understanding the JavaScript
	10.7.3 Interacting With the WebSocket Server
	10.7.4 Building a Client
	10.7.5 Attempting to Inject Commands
	10.7.6 Digging Deeper
	10.8 Wrapping Up

11 Concord Authentication Bypass to RCE
	11.1 Getting Started
	11.2 Authentication Bypass: Round One - CSRF and CORS
	11.2.1 Same-Origin Policy (SOP)
	11.2.2 Cross-Origin Resource Sharing (CORS)
	11.2.3 Discovering Unsafe CORS Headers
	11.2.4 SameSite Attribute
	11.2.5 Exploit Permissive CORS and CSRF
	11.3 Authentication Bypass: Round Two - Insecure Defaults
	11.4 Wrapping Up

12 Server Side Request Forgery
	12.1 Getting Started
	12.2 Introduction to Microservices
	12.2.2 Web Service URL Formats
	12.3 API Discovery via Verb Tampering
	12.3.1 Initial Enumeration
	12.3.2 Advanced Enumeration with Verb Tampering
	12.4 Introduction to Server-Side Request Forgery
	12.4.1 Server-Side Request Forgery Discovery
	12.4.2 Source Code Analysis
	12.4.3 Exploiting Blind SSRF in Directus
	12.4.4 Port Scanning via Blind SSRF
	12.4.5 Subnet Scanning with SSRF
	12.4.6 Host Enumeration
	12.5 Render API Auth Bypass
	12.6 Exploiting Headless Chrome
	12.6.2 Using JavaScript to Exfiltrate Data
	12.6.3 Stealing Credentials from Kong Admin API
	12.6.4 URL to PDF Microservice Source Code Analysis
	12.7 Remote Code Execution
	12.7.1 RCE in Kong Admin API
	12.8 Wrapping Up

13 Guacamole Lite Prototype Pollution
	13.1 Getting Started
	13.1.2 Understanding the Code
	13.1.3 Configuring Remote Debugging
	13.2 Introduction to JavaScript Prototype
	13.2.2 Prototype Pollution
	13.2.3 Blackbox Discovery
	13.2.4 Whitebox Discovery
	13.3 Prototype Pollution Exploitation
	13.4 EJS
	13.4.1 EJS - Proof of Concept
	13.4.2 EJS - Remote Code Execution
	13.5 Handlebars
	13.5.1 Handlebars - Proof of Concept
	13.5.2 Handlebars - Remote Code Execution
	13.6 Wrapping Up

14 Conclusion
	14.1 The Journey So Far
	14.2 Exercises and Extra Miles
	14.3 The Road Goes Ever On
	14.4 Wrapping Up
  
  
  
  +++++++++++++ <Evasion Techniques and Breaching Defenses> +++++++++++++++++

 

1 General Course Information
	1.1 About The PEN-300 Course
	1.2 Provided Material
	1.2.1 PEN-300 Course Materials
	1.2.2 Access to the Internal VPN Lab Network
	1.2.3 The Offensive Security Student Forum
	1.2.4 Live Support and RocketChat
	1.2.5 OSEP Exam Attempt
	1.3 Overall Strategies for Approaching the Course
	1.3.1 Welcome and Course Information Emails
	1.3.2 Course Materials
	1.3.3 Course Exercises
	1.4 About the PEN-300 VPN Labs
	1.4.1 Control Panel
	1.4.2 Reverts
	1.4.3 Client Machines
	1.4.4 Kali Virtual Machine
	1.4.5 Lab Behavior and Lab Restrictions
	1.5 About the OSEP Exam
	1.6 Wrapping Up

2 Operating System and Programming Theory
	2.1 Programming Theory
	2.1.1 Programming Language Level
	2.1.2 Programming Concepts
	2.2 Windows Concepts
	2.2.1 Windows On Windows
	2.2.2 Win32 APIs
	2.2.3 Windows Registry
	2.3 Wrapping Up

3 Client Side Code Execution With Office
	3.1 Will You Be My Dropper
	3.1.1 Staged vs Non-staged Payloads
	3.1.2 Building Our Droppers
	3.1.3 HTML Smuggling
	3.2 Phishing with Microsoft Office
	3.2.1 Installing Microsoft Office
	3.2.2 Introduction to VBA
	3.2.3 Let PowerShell Help Us
	3.3 Keeping Up Appearances
	3.3.1 Phishing PreTexting
	3.3.2 The Old Switcheroo
	3.4 Executing Shellcode in Word Memory
	3.4.1 Calling Win32 APIs from VBA
	3.4.2 VBA Shellcode Runner
	3.5 PowerShell Shellcode Runner
	3.5.1 Calling Win32 APIs from PowerShell
	3.5.2 Porting Shellcode Runner to PowerShell
	3.6 Keep That PowerShell in Memory
	3.6.1 Add-Type Compilation
	3.6.2 Leveraging UnsafeNativeMethods
	3.6.3 DelegateType Reflection
	3.6.4 Reflection Shellcode Runner in PowerShell
	3.7 Talking To The Proxy
	3.7.1 PowerShell Proxy-Aware Communication
	3.7.2 Fiddling With The User-Agent
	3.7.3 Give Me A SYSTEM Proxy
	3.8 Wrapping Up

4 Client Side Code Execution With Windows Script Host
	4.1 Creating a Basic Dropper in Jscript
	4.1.1 Execution of Jscript on Windows
	4.1.2 Jscript Meterpreter Dropper
	4.2 Jscript and C#
	4.2.1 Introduction to Visual Studio
	4.2.2 DotNetToJscript
	4.2.3 Win32 API Calls From C#
	4.2.4 Shellcode Runner in C#
	4.2.5 Jscript Shellcode Runner
	4.2.6 SharpShooter
	4.3 In-memory PowerShell Revisited
	4.3.1 Reflective Load
	4.4 Wrapping Up

5 Process Injection and Migration
	5.1 Finding a Home for Our Shellcode
	5.1.1 Process Injection and Migration Theory
	5.1.2 Process Injection in C#
	5.2 DLL Injection
	5.2.1 DLL Injection Theory
	5.2.2 DLL Injection with C#
	5.3 Reflective DLL Injection
	5.3.1 Reflective DLL Injection Theory
	5.3.2 Reflective DLL Injection in PowerShell
	5.4 Process Hollowing
	5.4.1 Process Hollowing Theory
	5.4.2 Process Hollowing in C#
	5.5 Wrapping Up

6 Introduction to Antivirus Evasion
	6.1 Antivirus Software Overview
	6.2 Simulating the Target Environment
	6.3 Locating Signatures in Files
	6.4 Bypassing Antivirus with Metasploit
	6.4.1 Metasploit Encoders
	6.4.2 Metasploit Encryptors
	6.5 Bypassing Antivirus with C#
	6.5.1 C# Shellcode Runner vs Antivirus
	6.5.2 Encrypting the C# Shellcode Runner
	6.6 Messing with Our Behavior
	6.6.1 Simple Sleep Timers
	6.6.2 Non-emulated APIs
	6.7 Office Please Bypass Antivirus
	6.7.1 Bypassing Antivirus in VBA
	6.7.2 Stomping On Microsoft Word
	6.8 Hiding PowerShell Inside VBA
	6.8.1 Detection of PowerShell Shellcode Runner
	6.8.2 Dechaining with WMI
	6.8.3 Obfuscating VBA
	6.9 Wrapping Up

7 Advanced Antivirus Evasion
	7.1 Intel Architecture and Windows 10
	7.1.1 WinDbg Introduction
	7.2 Antimalware Scan Interface
	7.2.1 Understanding AMSI
	7.2.2 Hooking with Frida
	7.3 Bypassing AMSI With Reflection in PowerShell
	7.3.1 What Context Mom?
	7.3.2 Attacking Initialization
	7.4 Wrecking AMSI in PowerShell
	7.4.1 Understanding the Assembly Flow
	7.4.2 Patching the Internals
	7.5 UAC Bypass vs Microsoft Defender
	7.5.1 FodHelper UAC Bypass
	7.5.2 Improving Fodhelper
	7.6 Bypassing AMSI in JScript
	7.6.1 Detecting the AMSI API Flow
	7.6.2 Is That Your Registry Key?
	7.6.3 I Am My Own Executable
	7.7 Wrapping Up

8 Application Whitelisting
	8.1 Application Whitelisting Theory and Setup
	8.1.1 Application Whitelisting Theory
	8.1.2 AppLocker Setup and Rules
	8.2 Basic Bypasses
	8.2.1 Trusted Folders
	8.2.2 Bypass With DLLs
	8.2.3 Alternate Data Streams
	8.2.4 Third Party Execution
	8.3 Bypassing AppLocker with PowerShell
	8.3.1 PowerShell Constrained Language Mode
	8.3.2 Custom Runspaces
	8.3.3 PowerShell CLM Bypass
	8.3.4 Reflective Injection Returns
	8.4 Bypassing AppLocker with C#
	8.4.1 Locating a Target
	8.4.2 Reverse Engineering for Load
	8.4.3 Give Me Code Exec
	8.4.4 Invoking the Target Part 1
	8.4.5 Invoking the Target Part 2
	8.5 Bypassing AppLocker with JScript
	8.5.1 JScript and MSHTA
	8.5.2 XSL Transform
	8.6 Wrapping Up

9 Bypassing Network Filters
	9.1 DNS Filters
	9.1.2 Dealing with DNS Filters
	9.2 Web Proxies
	9.2.1 Bypassing Web Proxies
	9.3 IDS and IPS Sensors
	9.3.1 Case Study: Bypassing Norton HIPS with Custom Certificates
	9.4 Full Packet Capture Devices
	9.5 HTTPS Inspection
	9.6 Domain Fronting
	9.6.1 Domain Fronting with Azure CDN
	9.6.2 Domain Fronting in the Lab
	9.7 DNS Tunneling
	9.7.1 How DNS Tunneling Works
	9.7.2 DNS Tunneling with dnscat2
	9.8 Wrapping Up

10 Linux Post-Exploitation
	10.1 User Configuration Files
	10.1.1 VIM Config Simple Backdoor
	10.1.2 VIM Config Simple Keylogger
	10.2 Bypassing AV
	10.2.1 Kaspersky Endpoint Security
	10.2.2 Antiscan.me
	10.3 Shared Libraries
	10.3.1 How Shared Libraries Work on Linux
	10.3.2 Shared Library Hijacking via LD_LIBRARY_PATH
	10.3.3 Exploitation via LD_PRELOAD
	10.4 Wrapping Up

11 Kiosk Breakouts
	11.1 Kiosk Enumeration
	11.1.1 Kiosk Browser Enumeration
	11.2 Command Execution
	11.2.1 Exploring the Filesystem
	11.2.2 Leveraging Firefox Profiles
	11.2.3 Enumerating System Information
	11.2.4 Scratching the Surface
	11.3 Post-Exploitation
	11.3.1 Simulating an Interactive Shell
	11.4 Privilege Escalation
	11.4.1 Thinking Outside the Box
	11.4.2 Root Shell at the Top of the Hour
	11.4.3 Getting Root Terminal Access
	11.5 Windows Kiosk Breakout Techniques
	11.6 Wrapping Up

12 Windows Credentials
	12.1 Local Windows Credentials
	12.1.1 SAM Database
	12.1.2 Hardening the Local Administrator Account
	12.2 Access Tokens
	12.2.1 Access Token Theory
	12.2.2 Elevation with Impersonation
	12.2.3 Fun with Incognito
	12.3 Kerberos and Domain Credentials
	12.3.1 Kerberos Authentication
	12.3.2 Mimikatz
	12.4 Processing Credentials Offline
	12.4.1 Memory Dump
	12.4.2 MiniDumpWriteDump
	12.5 Wrapping Up

13 Windows Lateral Movement
	13.1 Remote Desktop Protocol
	13.1.1 Lateral Movement with RDP
	13.1.2 Reverse RDP Proxying with Metasploit
	13.1.3 Reverse RDP Proxying with Chisel
	13.1.4 RDP as a Console
	13.1.5 Stealing Clear Text Credentials from RDP
	13.2 Fileless Lateral Movement
	13.2.1 Authentication and Execution Theory
	13.2.2 Implementing Fileless Lateral Movement in C#
	13.3 Wrapping Up

14 Linux Lateral Movement
	14.1 Lateral Movement with SSH
	14.1.1 SSH Keys
	14.1.2 SSH Persistence
	14.1.3 SSH Hijacking with ControlMaster
	14.1.4 SSH Hijacking Using SSH-Agent and SSH Agent Forwarding
	14.2 DevOps
	14.2.1 Introduction to Ansible
	14.2.2 Enumerating Ansible
	14.2.3 Ad-hoc Commands
	14.2.4 Ansible Playbooks
	14.2.5 Exploiting Playbooks for Ansible Credentials
	14.2.6 Weak Permissions on Ansible Playbooks
	14.2.7 Sensitive Data Leakage via Ansible Modules
	14.2.8 Introduction to Artifactory
	14.2.9 Artifactory Enumeration
	14.2.10 Compromising Artifactory Backups
	14.2.11 Compromising Artifactory’s Database
	14.2.12 Adding a Secondary Artifactory Admin Account
	14.3 Kerberos on Linux
	14.3.1 General Introduction to Kerberos on Linux
	14.3.2 Stealing Keytab Files
	14.3.3 Attacking Using Credential Cache Files
	14.3.4 Using Kerberos with Impacket
	14.4 Wrapping Up

15 Microsoft SQL Attacks
	15.1 MS SQL in Active Directory
	15.1.1 MS SQL Enumeration
	15.1.2 MS SQL Authentication
	15.1.3 UNC Path Injection
	15.1.4 Relay My Hash
	15.2 MS SQL Escalation
	15.2.1 Privilege Escalation
	15.2.2 Getting Code Execution
	15.2.3 Custom Assemblies
	15.3 Linked SQL Servers
	15.3.1 Follow the Link
	15.3.2 Come Home To Me
	15.4 Wrapping Up

16 Active Directory Exploitation
	16.1 AD Object Security Permissions
	16.1.1 Object Permission Theory
	16.1.2 Abusing GenericAll
	16.1.3 Abusing WriteDACL
	16.2 Kerberos Delegation
	16.2.1 Unconstrained Delegation
	16.2.2 I Am a Domain Controller
	16.2.3 Constrained Delegation
	16.2.4 Resource-Based Constrained Delegation
	16.3 Active Directory Forest Theory
	16.3.1 Active Directory Trust in a Forest
	16.3.2 Enumeration in the Forest
	16.4 Burning Down the Forest
	16.4.1 Owning the Forest with Extra SIDs
	16.4.2 Owning the Forest with Printers
	16.5 Going Beyond the Forest
	16.5.1 Active Directory Trust Between Forests
	16.5.2 Enumeration Beyond the Forest
	16.6 Compromising an Additional Forest
	16.6.1 Show Me Your Extra SID
	16.6.2 Linked SQL Servers in the Forest
	16.7 Wrapping Up

17 Combining the Pieces
	17.1 Enumeration and Shell
	17.1.1 Initial Enumeration
	17.1.2 Gaining an Initial Foothold
	17.1.3 Post Exploitation Enumeration
	17.2 Attacking Delegation
	17.2.1 Privilege Escalation on web01
	17.2.2 Getting the Hash
	17.2.3 Delegate My Ticket
	17.3 Owning the Domain
	17.3.1 Lateral Movement
	17.3.2 Becoming Domain Admin
	17.4 Wrapping Up

18 Trying Harder: The Labs
	18.1 Real Life Simulations
	18.2 Wrapping Up
  
  
  
